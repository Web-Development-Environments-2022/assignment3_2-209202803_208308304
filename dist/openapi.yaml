openapi: 3.0.0
info:
  title: Recipes api
  description: API for recipes project
  version: 1.0.1
servers:
# local:
- url: "http://127.0.0.1:3000"
# remote:
# - url: "http://132.72.84.107"
  description: SwaggerHub API Auto Mocking hey
tags:
- name: auth
  description: Athenticat Users By register and login calls
- name: users
  description: Operations available to logged in users like favorite , my and family recipes
- name: recipes
  description: Operations of Display recipes and mark them as watched/liked
- name: search
  description: Search recipes by term with optional filters
paths:
  /auth/register:
    post:
      tags:
      - auth
      summary: adds a new user to the DB
      description: A json object that contains all the details about the new user.
      operationId: "1"
      requestBody:
        description: user details to add to the DB
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      responses:
        "201":
          description: new user created
        "409":
          description: username already exists
        "412":
          description: a user is logged in
  /auth/login:
    post:
      tags:
      - auth
      summary: login to the system
      description: A json object that contains username and password for the server to verify.
      operationId: "2"
      requestBody:
        description: user details for the server to verify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      responses:
        "200":
          description: successful login
        "412":
          description: a user is already logged in
        "404":
          description: username or password incorrect
  /auth/logout:
    put:
      tags:
      - auth
      summary: logout from the system
      description: logout user if he is connected
      operationId: "3"
      responses:
        "200":
          description: successful logout
        "412":
          description: no user is logged in
  /users/favorites:
    post:
      tags:
      - users
      summary: save recipe Id as favorite for a specific user
      description: sends recipe Id to be added as favorite for a specific user
      operationId: "4"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FavoriteRecipe'
        required: true
      responses:
        "201":
          description: recipe successfully saved as favorite
        "404":
          description: recipe Id Not Found
        "412":
          description: no user is logged in
    get:
      tags:
      - users
      summary: get favorite recipes of a specific user
      description: return user's favorite recipes.
      operationId: "5"
      responses:
        "200":
          description: returns a json object with array of favorite recipes of the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Preview'
        "412":
          description: no user is logged in          
  /users/myrecipes:
    post:
      tags:
      - users
      summary: create a new user recipe, which will be added to 'my recipes'
      description: A json object that contains all the details about the new recipe.
      operationId: "6"
      requestBody:
        description: recipe details to add to the DB
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyRecipe'
        required: true
      responses:
        "201":
          description: new recipe created
        "412":
          description: no user is logged in
    get:
      tags:
      - users
      summary: get all the recipes created by the logged-in user
      description: return all the recipes the logged-in user created.
      operationId: "7"
      responses:
        "200":
          description: returns a json object with array of user's personal recipes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Preview'
        "412":
          description: no user is logged in
  /users/familyrecipes/:
    post:
      tags:
      - users
      summary: create a new family recipe, which will be added to 'family recipes'
      description: A json object that contains all the details about the new family recipe.
      operationId: "8"
      requestBody:
        description: recipe details to add to the DB
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FamilyRecipe'
        required: true
      responses:
        "201":
          description: new family recipe created
        "412":
          description: no user is logged in
    get:
      tags:
      - users
      summary: get all the family recipes created by the logged-in user
      description: return all the recipes the logged-in user created.
      operationId: "9"
      responses:
        "200":
          description: returns a json object with array of user's family recipes.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FamilyRecipe'
        "412":
          description: no user is logged in  
  /recipes/:
    get:
      tags:
      - recipes
      summary: get main recipes page 
      description: get from server an object with two arrays- 3 random recipes and 3 last watched recipes by the user if user is logged in
      operationId: "10"
      responses:
        "200":
          description: returns a json object with two arrays- 3 random recipes and 3 last watched recipes by the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HomePageResponse'
  /recipes/{recipe_id}:
    put:
      tags:
      - recipes
      summary: get recipe full page by recipe Id and mark it as watched
      description: get from server a recipe and its full content by recipe Id, mark it in the DB as watched
      operationId: "11"
      parameters:
      - name: recipe_id
        in: path
        description: the recipe Id of the recipe we would like to display its content
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: returns a json object with full recipe content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullRecipe'
        "404":
          description: Recipe Not Found
  /search:
    get:
      tags:
      - search
      summary: search recipe by query and parameters
      description: returns a json object with a list of recipes containing the query name
      operationId: "12"
      parameters:
      - name: query
        in: query
        description: The recipe's full/partial name
        required: true
        style: form
        explode: true
        schema:
          type: string
      - name: numOfResults
        in: query
        description: number of results the server should returl, can be 5/10/15
        required: true
        style: form
        explode: true
        schema:
          maximum: 15
          minimum: 5
          type: integer
      - name: cuisinesFilter
        in: query
        description: user can filter recipes by specifics cusines
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - African
            - American
            - British
            - Cajun
            - Caribbean
            - Chinese
            - EasternEuropean
            - European
            - French
            - German
            - Greek
            - Indian
            - Irish
            - Italian
            - Japanese
            - Jewish
            - Korean
            - LatinAmerican
            - Mediterranean
            - Mexican
            - MiddleEastern
            - Nordic
            - Southern
            - Spanish
            - Thai
            - Vietnamese
      - name: dietsFilter
        in: query
        description: user can filter recipes by specifics diets
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - GlutenFree
            - Ketogenic
            - Vegetarian
            - LactoVegetarian
            - OvoVegetarian
            - Vegan
            - Pescetarian
            - Paleo
            - Primal
            - LowFODMAP
            - Whole30
      - name: intolerancesFilter
        in: query
        description: user can filter out recipes by specifics intolerances
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - Dairy
            - Egg
            - Gluten
            - Grain
            - Peanut
            - Seafood
            - Sesame
            - Shellfish
            - Soy
            - Sulfite
            - Tree Nut
            - Wheat
      responses:
        "200":
          description: returns a json object with array of recipes with the given name
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FullRecipe'
        "404":
          description: recipes not found
components:
  schemas:
    Register:
      required:
      - username
      - firstname
      - lastname
      - country
      - password
      - email
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username contains between 3-8 characters, letters only
          example: eyalshan
        firstname:
          type: string
          description: user's first name
          example: Eyal
        lastname:
          type: string
          description: user's last name
          example: Shani
        country:
          type: string
          description: user's country
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: password contains between 5-10 characters, should contain at least one digit and one special character
          format: password
          example: tom@t0s
        email:
          type: string
          description: user's email
          format: email
          example: eyalShani@gmail.com
    Login:
      required:
      - username
      - password
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username contains between 3-8 characters, letters only
          example: eyalshan
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: password contains between 5-10 characters, should contain at least one digit and one special character
          format: password
          example: tom@t0s
    Preview:
      required:
      - recipe_id
      - title
      - image
      - readyInMinutes
      - popularity
      - vegan
      - vegetarian
      - glutenFree
      - isFavorite
      - isWatched
      type: object
      properties:
        recipe_id:
          type: string
          description: recipe's Id in the system
          example: "12345"
        title:
          type: string
          description: a recipe's name/title
          example: bolognese lasagna
        image:
          type: string
          description: URL for the recipe's image
          format: URL
          example: https://img.mako.co.il/2018/05/07/IMG_2700_i.jpg
        readyInMinutes:
          minimum: 0
          type: integer
          description: preperation time in minutes, greater that 0
          example: 40
        popularity:
          minimum: 0
          type: integer
          description: number of likes a recipe has
          example: 504
        vegan:
          description: marks this recipe as vegan or not
          example: true
          type: boolean
        vegetarian:
          description: marks this recipe as vegetarian or not
          example: true
          type: boolean
        glutenFree:
          type: boolean
          description: marks this recipes as gluten free(true) or not gluten free(false)
          example: false
        isFavorite:
          type: boolean
          description: marks this recipes as favorite (true) if the user liked this recipe or not (false)
          example: true
        isWatched:
          type: boolean
          description: marks this recipes as watched (true) if the user viewed this recipe or not (false)
          example: true
    FullRecipe:
      required:
      - Preview
      - ingredients
      - instructions
      - servings
      type: object
      properties:
        Preview:
          $ref: '#/components/schemas/Preview'
        ingredients:
          type: array
          description: a list of the ingredients and the amount for the recipe.
          example:
          - {"name": "egg",
            "amount": 1,
            "metric": "unit"}
          - {"name": "milk",
            "amount": 1,
            "metric": "cup"}
          items:
            $ref: '#/components/schemas/Ingredient'
        instructions:
          type: array
          description: a list of the instructions of the recipe, include step number and description
          example:
          - {"number": 1}
          - {"step": "bake"}
          items:
             $ref: '#/components/schemas/Instruction'
        servings:
          minimum: 1
          type: integer
          description: the recipe's amount of servings
          example: 4
    MyRecipe:
      required:
      - title
      - image
      - readyInMinutes
      - popularity
      - vegan
      - vegetarian
      - glutenFree
      - ingredients
      - instructions
      - servings
      type: object
      properties:
        title:
          type: string
          description: a recipe's name/title
          example: bolognese lasagna
        image:
          type: string
          description: URL for the recipe's image
          format: URL
          example: https://img.mako.co.il/2018/05/07/IMG_2700_i.jpg
        readyInMinutes:
          minimum: 0
          type: integer
          description: preperation time in minutes, greater that 0
          example: 40
        popularity:
          minimum: 0
          type: integer
          description: number of likes a recipe has
          example: 504
        vegan:
          description: marks this recipe as vegan or not
          example: true
          type: boolean
        vegetarian:
          description: marks this recipe as vegetarian or not
          example: true
          type: boolean
        glutenFree:
          type: boolean
          description: marks this recipes as gluten free(true) or not gluten free(false)
          example: false
        ingredients:
          type: array
          description: a list of the ingredients and the amount for the recipe.
          example:
          - {"name": "egg",
            "amount": 1,
            "metric": "unit"}
          - {"name": "milk",
            "amount": 1,
            "metric": "cup"}
          items:
            $ref: '#/components/schemas/Ingredient'
        instructions:
          type: array
          description: a list of the instructions of the recipe, include step number and description
          example:
          - {"number": 1}
          - {"step": "bake"}
          items:
             $ref: '#/components/schemas/Instruction'
        servings:
          minimum: 1
          type: integer
          description: the recipe's amount of servings
          example: 4  
    FamilyRecipe:
      required:
      - title
      - image
      - readyInMinutes
      - popularity
      - vegan
      - vegetarian
      - glutenFree
      - ingredients
      - instructions
      - servings
      - owner
      - tradition
      type: object
      properties:
        title:
          type: string
          description: a recipe's name/title
          example: bolognese lasagna
        image:
          type: string
          description: URL for the recipe's image
          format: URL
          example: https://img.mako.co.il/2018/05/07/IMG_2700_i.jpg
        readyInMinutes:
          minimum: 0
          type: integer
          description: preperation time in minutes, greater that 0
          example: 40
        popularity:
          minimum: 0
          type: integer
          description: number of likes a recipe has
          example: 504
        vegan:
          description: marks this recipe as vegan or not
          example: true
          type: boolean
        vegetarian:
          description: marks this recipe as vegetarian or not
          example: true
          type: boolean
        glutenFree:
          type: boolean
          description: marks this recipes as gluten free(true) or not gluten free(false)
          example: false
        ingredients:
          type: array
          description: a list of the ingredients and the amount for the recipe.
          example:
          - {"name": "egg",
            "amount": 1,
            "metric": "unit"}
          - {"name": "milk",
            "amount": 1,
            "metric": "cup"}
          items:
            $ref: '#/components/schemas/Ingredient'
        instructions:
          type: array
          description: a list of the instructions of the recipe, include step number and description
          example:
          - {"number": 1}
          - {"step": "bake"}
          items:
             $ref: '#/components/schemas/Instruction'
        servings:
          minimum: 1
          type: integer
          description: the recipe's amount of servings
          example: 4  
        owner:
          type: string
          description: the name of the person the recipe belongs.
          example: grandma Iris
        tradition:
          type: string
          description: when the recipe is customary to prepare it in the family
          example: we make this recipe every passover, exactly like the recipe.
    Ingredient:
      required:
      - amount
      - metric
      - name
      type: object
      properties:
        name:
          type: string
          description: the name of the ingredient
          example: eggs
        amount:
          minimum: 0
          type: number
          description: the amount of the ingredient,must be positive number.
          format: float
          example: 4
        metric:
          type: string
          description: the measurement metric of the ingredient
          example: units
          enum:
          - units
          - tsp
          - tbsp
          - cup
          - g
          - ml
          - pinch
    Instruction:
      required:
      - number
      - step
      type: object
      properties:
        number:
          minimum: 0
          type: integer
          description: the instruction's step number
          example: 1
        step:
          type: string
          description: the instruction's step description
          example: boil eggs for 8 minutes
    HomePageResponse:
      required:
      - lastWatchedRecipes
      - randomRecipes
      type: object
      properties:
        randomRecipes:
          maxItems: 3
          minItems: 3
          uniqueItems: true
          type: array
          description: return previews of 3 random  recipes
          example:
          - Preview_1
          - Preview_2
          - Preview_3
          items:
            $ref: '#/components/schemas/Preview'
        lastWatchedRecipes:
          maxItems: 3
          minItems: 0
          uniqueItems: true
          type: array
          description: return previews of user's 3 last watched recipes
          example:
          - Preview_1
          - Preview_2
          - Preview_3
          items:
            $ref: '#/components/schemas/Preview'
    FavoriteRecipe:
      required:
      - recipe_id
      type: object
      properties:
        recipe_id:
          type: string
          description: recipe's Id in the system
          example: "12345"